
pipeline {
    agent any
  environment {
		DOCKERHUB_CREDENTIALS=credentials('dockerhub')
	}
    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        disableConcurrentBuilds()
        timeout(time: 1, unit: 'HOURS') 
        timestamps()
      }
    stages {
        stage('Setup parameters') {
            steps {
                script {
                    properties([
                        parameters([
                             string(name: 'TIME',
                             defaultValue: '',
                            description: '''Enter the deployment time'''),


                             string(name: 'AUTH',
                             defaultValue: '',
                            description: '''Enter the AUTH service tag starting with v example v1.1.0 '''),


                             string(name: 'DB',
                             defaultValue: '',
                            description: '''Enter the DB service tag with v example v1.1.0 '''),


                             string(name: 'REDIS',
                             defaultValue: '',
                            description: '''Enter the REDIS  service tag with v example v1.1.0 '''),

                             string(name: 'UI',
                             defaultValue: '',
                            description: '''Enter the UI  service tag with v example v1.1.0 '''),

                             string(name: 'WEATHER',
                             defaultValue: '',
                            description: '''Enter the WEATHER  service tag with v example v1.1.0'''),
                        ])
                    ])
                }
            }
        }



    stage('check entry') {

			steps {
				sh ''' 
                bash $WORKSPACE/weatherapp/preprod.sh $AUTH $DB $REDIS  $UI $WEATHER 
                '''
			}
		}

    stage('Login') {

			steps {
				sh '''
        sleep 10
        '''
			}
		}



}


   post {
   
   success {
      slackSend (channel: '#go-no-go-production', color: 'good', message: "Application The_Weather_app, It is a GO, for tonight deployment. TIME: $TIME PM CST\n  ui: $UI\n auth: $AUTH\n db: $DB\n redis: $REDIS\n weahter: $WEATHER\n:  Branch name  <<${env.BRANCH_NAME}>>  Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
    }

    cleanup {
      deleteDir()
    }
}






}




